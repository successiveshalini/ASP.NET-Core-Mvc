@model List<EcommerceManagementProject.Models.Domain.ProductModel>


@{
    ViewData["Title"] = "GetAll";
    var CategoryList = ViewBag.CategoryList as List<EcommerceManagementProject.Models.Domain.CategoryModel>;
}
@* <html>
    <head>
        <style>
        .mt70 {
            margin-top: 70px;
        }
        </style>
    </head>
    <body> *@

    <h3 class="m-3 mt70">All Products</h3>

    <div class="d-flex mt70 justify-content-between">
        <div>
            <select class="form-select " style="width:10rem" id="categoryId">
                @if (CategoryList != null && CategoryList.Count > 0)
                {
                    @foreach (var x in CategoryList)
                    {
                        <option value="@x.CategoryId">@x.CategoryName</option>
                    }
                }
            </select>
        </div>
        <div class="d-flex justify-content-between">
            <div class="me-5">
                <a class="btn btn-success" href="/Product/AddProduct">Add New Product</a>
            </div>
        <div class="input-group d-flex justify-content-end ">
            <form id="searchForm" asp-action="GetProductsByCategory" asp-controller="Product">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Search products..." value="" id="searchInput" name="searchQuery">
                    <button class="btn btn-outline-primary" type="submit" id="searching">Search</button>
                    <button type="button" class="btn btn-outline-danger" id="resetButton">Reset</button>
                </div>
            </form>
        </div>
            <div class="mt-2 ms-2">
                <i class="bi bi-search"></i>
            </div>
        </div>
    </div>

<@* table class="table"  table-striped-columns">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Description</th>
                <th>Product Price</th>
                <th>Is Available</th>
                <th>Is Trending</th>
                <th>Category Name</th>
                <th>Created At</th>
            <th>Buttons for Modify Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ProductName</td>
                        <td>@product.ProductDesc</td>
                        <td>@product.ProductPrice</td>
                        <td>@product.IsActive</td>
                        <td>@product.IsTrending</td>
                        <td>@product.Category.CategoryName</td>
                        <td>@product.ProductCreatedAt.Date.ToString("dd-MM-yyyy")</td>
                        <td>
                        <a class="btn btn-primary" href="/Product/Update/@product.ProductId">Edit</a>
                            @if (product.IsActive)
                            {
                                <a class="btn btn-danger" href="/Product/Deactive/@product.ProductId">DeActive</a>
                            }
                            else
                            {
                                <a class="btn btn-success" href="/Product/Active/@product.ProductId">Active</a>
                            }
                        
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>  *@

    <div id="productTableBody">

    </div>

@section Scripts{
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var getProducts = function () {
            $.ajax({
                url: '@Url.Action("GetAllByCategory", "Product")',
                type: 'GET',
                data: {
                    categoryId: $('#categoryId').val(),
                    searchingQuery: $('#searchInput').val(),
                    sortOrder: $('#sortOrder').val(),
                },
                success: function (data) {
                        $('#productTableBody').html(data);
                },
                error: function () {
                    console.log('Error fetching products');
                }
            });
        }

        $(document).ready(function () {
            getProducts();
        });

        $("#categoryId, #searching,#sortOrder").change(function () {
            getProducts();
        });

        $(function () {
            $("#searchForm").submit(function (event) {
                // Prevent the default form submission
                event.preventDefault();
                getProducts();
            });
        });

        $("#resetButton").click(function () {
            // Clear search input and reload original state
            $('#searchInput').val('');
            getProducts();
        });

    </script>
    
}